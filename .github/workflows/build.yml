name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        build_type: [ Debug, Release ]
    runs-on: ${{ matrix.os }}
    # Do not ignore bash profile files. From:
    # https://github.com/marketplace/actions/setup-miniconda
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Setup - Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: '23.10.0-1'
        # python-version: 3.11
        channels: bioconda, conda-forge, defaults
        use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
        # auto-update-conda: true
        auto-activate-base: true

    - name: Setup - Conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.60.0

    - name: Install dependencies - Linux
      if: runner.os == 'Linux'
      run: |
        sudo add-apt-repository universe
        sudo apt update
        sudo apt install -y gcc-13 g++-13 libfmt-dev libglfw3-dev libgtest-dev libgmock-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 60 --slave /usr/bin/g++ g++ /usr/bin/g++-13

    - name: Install dependencies - MacOS
      if: runner.os == 'MacOS'
      run: brew install fmt glfw3 googletest

    - name: Install dependencies - Windows
      uses: johnwason/vcpkg-action@v5
      if: runner.os == 'Windows'
      with:
        pkgs: fmt glfw3 gtest
        triplet: x64-windows
        token: ${{ github.token }}

    - name: Build - Linux
      if: runner.os == 'Linux'
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DSUPPRESS_COMPILER_WERROR=1
        cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    - name: Build - MacOS
      if: runner.os == 'MacOS'
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    - name: Build - Windows
      if: runner.os == 'Windows'
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
        cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    - name: Unit Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{ matrix.build_type }}
